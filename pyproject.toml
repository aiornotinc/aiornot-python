[tool.poetry]
name = "aiornot"
version = "0.0.3"
homepage = "https://aiornot.com/"
repository = "https://github.com/aiornotinc/aiornot-python"
documentation = "https://github.com/aiornotinc/aiornot-python"
keywords = ["ai detection", "aiornot", "generative ai", "genai"]
description = "Python client for the AIORNOT API."
license = "MIT"
authors = ["aiornot <support@aiornot.com>"]
readme = "README.md"


[tool.poetry.dependencies]
python = "^3.10"
httpx = "^0.25.1"
pydantic = "^2.5.2"
aiofiles = "^23.2.1"
click = "^8.1.7"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
ruff = "^0.1.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
aiornot = "aiornot.cli:cli"

[tool.ruff.isort]
combine-as-imports = true
relative-imports-order = "closest-to-furthest"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod", "pydantic.validator", "pydantic.root_validator"]

[[tool.mypy.overrides]]
module = [
    "pydantic.*",
    "httpx.*",
    "click.*",
]
ignore_missing_imports = true